class Form{#e=[];#t=document.createElement("form");constructor(e){this.title=e}addField(e){if(!e instanceof Field)throw new Error("You tried to add something that is not a field");return this.#e.push(e),console.log(`Added field ${e.name} to form`),this}render(){const e=document.createElement("h1");e.textContent=this.title,this.#t.append(e),this.#e.forEach((e=>{const t=e.render();this.#t.append(t)}));const t=document.createElement("button");t.type="submit",t.textContent="Submit",this.#t.append(t),this.#t.addEventListener("submit",this.#n.bind(this)),document.body.append(this.#t)}#n(e){e.preventDefault();const t=this.#e.map((e=>({[e.name]:e.value}))),n=document.querySelector("#toast");return n.classList.add("show"),n.textContent=t.map((e=>JSON.stringify(e))),setTimeout((()=>{n.classList.remove("show")}),5e3),t}}class Field{#s=document.createElement("input");constructor(e){this.name=e.name,this.type=e.type,this.label=e.label}render(){const e=document.createElement("label");e.innerText=this.label,this.#s.name=this.name,this.#s.type=this.type;const t=document.createElement("div");return t.classList.add("field-container"),t.append(e),t.append(this.#s),t}get value(){return this.#s.value}}const form=new Form("Signup"),email=new Field({name:"email",type:"email",label:"email"}),password=new Field({name:"password",type:"password",label:"password"});form.addField(email).addField(password).render();
//# sourceMappingURL=index.e1beb337.js.map
